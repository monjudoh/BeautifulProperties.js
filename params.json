{"name":"Beautifulproperties.js","tagline":"","body":"BeautifulProperties.js - Extension of ECMAScript5 property.\r\n===========================================================\r\n\r\nLinks\r\n=====\r\n\r\n-   [Repository](https://github.com/monjudoh/BeautifulProperties.js)\r\n-   [Reference](http://monjudoh.github.io/BeautifulProperties.js/docs/index.html)\r\n\r\nFeatures\r\n========\r\n\r\nLazyInitializable\r\n-----------------\r\n\r\nBeautifulProperties.LazyInitializable.define can define a property, it's\r\ninitialized at first access.\r\n\r\n``` {.sourceCode .javascript}\r\nvar proto = {};\r\nBeautifulProperties.LazyInitializable.define(proto,'boundFunction',function(){\r\n  return (function () {\r\n    console.log(this);\r\n  }).bind(this);\r\n});\r\nvar object1 = Object.create(proto);\r\nobject1.a = 1;\r\nvar boundFunction1 = object1.boundFunction;\r\nboundFunction1();// {a:1,boundFunction:fn}\r\nvar object2 = Object.create(proto);\r\nobject2.a = 2;\r\nvar boundFunction2 = object2.boundFunction;\r\nboundFunction2();// {a:2boundFunction:fn}\r\n```\r\n\r\nHookable\r\n--------\r\n\r\nBeautifulProperties.Hookable.define supports hooks for setting/getting\r\nproperty,replace or modify value.\r\n\r\nhooks\r\n\r\n``` {.sourceCode .javascript}\r\nvar object = {};\r\nBeautifulProperties.Hookable.define(object,'key');\r\nBeautifulProperties.Hookable.addHook(object,'key','beforeInit',function(val){\r\n  console.log('beforeInit',val);\r\n  return val;\r\n});\r\nBeautifulProperties.Hookable.addHook(object,'key','afterInit',function(val){\r\n  console.log('afterInit',val);\r\n});\r\nBeautifulProperties.Hookable.addHook(object,'key','beforeGet',function(){\r\n  console.log('beforeGet');\r\n});\r\nBeautifulProperties.Hookable.addHook(object,'key','afterGet',function(val){\r\n  console.log('afterGet',val);\r\n  return val;\r\n});\r\nBeautifulProperties.Hookable.addHook(object,'key','beforeSet',function(val,previousVal){\r\n  console.log('beforeSet',val,previousVal);\r\n  return val;\r\n});\r\nBeautifulProperties.Hookable.addHook(object,'key','afterSet',function(val,previousVal){\r\n  console.log('afterSet',val,previousVal);\r\n});\r\nobject.key = 1;\r\nobject.key = 2;\r\nobject.key;\r\n```\r\n\r\nmodify getting value\r\n\r\n``` {.sourceCode .javascript}\r\nvar object = {};\r\nBeautifulProperties.Hookable.define(object,'key');\r\nBeautifulProperties.Hookable.addHook(object,'key','afterGet',function(val){\r\n  return val * 2;\r\n});\r\n\r\nobject.key = 1;\r\nobject.key;//2\r\n```\r\n\r\nmodify setting value\r\n\r\n``` {.sourceCode .javascript}\r\nvar object = {};\r\nBeautifulProperties.Hookable.define(object,'key');\r\nBeautifulProperties.Hookable.addHook(object,'key','beforeInit',function(val,previousVal){\r\n  return val * 2;\r\n});\r\nBeautifulProperties.Hookable.addHook(object,'key','beforeSet',function(val,previousVal){\r\n  return val * 3;\r\n});\r\nobject.key = 1;\r\nobject.key;//2\r\nobject.key = 1;\r\nobject.key;//3\r\n```\r\n\r\nEvents\r\n------\r\n\r\n``` {.sourceCode .javascript}\r\nvar object = {};\r\nBeautifulProperties.Events.on(object,'eventType',function(ev){\r\n  console.log('event handler is called.');\r\n});\r\nBeautifulProperties.Events.trigger(object,'eventType');\r\n```\r\n\r\nevent bubbling.\r\n\r\nA event bubble up to the prototype of the object.\r\n\r\n``` {.sourceCode .javascript}\r\nvar proto = {};\r\nvar object = Object.create(proto);\r\nBeautifulProperties.Events.on(proto,'eventType',function(ev){\r\n  console.log('event handler is called.');\r\n});\r\nBeautifulProperties.Events.trigger(object,'eventType');\r\n```\r\n\r\ncontrolling event bubbling.\r\n\r\n``` {.sourceCode .javascript}\r\nvar ancestor = {};\r\nvar object = {};\r\nBeautifulProperties.Events.Ancestor.setRetriever(object,function(){\r\n  return ancestor;\r\n});\r\nBeautifulProperties.Events.on(ancestor,'eventType',function(ev){\r\n  console.log('event handler is called.');\r\n});\r\nBeautifulProperties.Events.trigger(object,'eventType');\r\n```\r\n\r\nObservable\r\n----------\r\n\r\nBeautifulProperties.Observable.define supports key/value observation.\r\n\r\n``` {.sourceCode .javascript}\r\nvar object = {};\r\nBeautifulProperties.Observable.define(object,'key');\r\nBeautifulProperties.Events.on(object,'init:key',function(ev,val){\r\n  console.log(val);// val:1\r\n});\r\nBeautifulProperties.Events.on(object,'change:key',function(ev,val,previousVal){\r\n  console.log(val,previousVal);// val:2,previousVal:1\r\n});\r\nobject.key=1;\r\nobject.key=2;\r\n```\r\n\r\nInstallation and usage\r\n======================\r\n\r\nIn browsers:\r\n------------\r\n\r\n``` {.sourceCode .html}\r\n<script src=\"BeautifulProperties.js\"></script>\r\n```\r\n\r\nIn an AMD loader like RequireJS:\r\n--------------------------------\r\n\r\n``` {.sourceCode .javascript}\r\nrequire(['BeautifulProperties'], function(BeautifulProperties) {\r\n});\r\n```\r\n\r\nChangelog\r\n=========\r\n\r\n0.2.0\r\n-----\r\n\r\n-   changed\r\n    - It trigger init:{key} event when Observable property is\r\n    initialized.\r\n-   removed\r\n    -   BeautifulProperties.Hookable.addHooks method\r\n    -   BeautifulProperties.Internal namespace\r\n    -   context property of BeautifulProperties.Events\\~BindingOptions\r\n\r\n0.1.12\r\n------\r\n\r\n-   added\r\n    - Multiple binding is supported in BeautifulProperties.Events.\r\n-   changed\r\n    - context property of BeautifulProperties.Events\\~BindingOptions is\r\n    renamed to thisObject.\r\n-   deprecated\r\n    -   context property of BeautifulProperties.Events\\~BindingOptions\r\n\r\n0.1.11\r\n------\r\n\r\n-   fixes\r\n    -   event.previousTarget,event.currentTarget in\r\n        BeautifulProperties.Events.Ancestor\\~ancestorRetriever.\r\n\r\n0.1.10\r\n------\r\n\r\n-   added\r\n    - BeautifulProperties.Events.Event\\#previousTarget property\r\n-   changed\r\n    -   BeautifulProperties.Events.Ancestor\\~ancestorRetriever callback\r\n        -   has 2 params.\r\n        -   If the ancestorRetriever returns undefined,Ancestor.retrieve\r\n            method returns the prototype of the target object.\r\n\r\n0.1.9\r\n-----\r\n\r\n-   Export as global,AMD,CJS.\r\n-   Many refacotoring.\r\n-   deprecated\r\n    -   BeautifulProperties.Hookable.addHooks method\r\n\r\n    - BeautifulProperties.Internal namespace is deprecated.\r\n-   removed\r\n    -   BeautifulProperties.getRaw method (deprecated since 0.1.6)\r\n    -   BeautifulProperties.setRaw method (deprecated since 0.1.6)\r\n\r\nAuthor\r\n======\r\n\r\nmonjudoh <https://github.com/monjudoh>\r\n\r\nContributors\r\n============\r\n\r\n-   aodag (Atsushi Odagiri) <https://github.com/aodag>\r\n    - He named this library.\r\n-   jbking (Yusuke Muraoka) <https://github.com/jbking>\r\n    -   He provides ideas for this library.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}